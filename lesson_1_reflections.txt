How did viewing a diff between two versions of a file help you see the bug that was introduced?

It is a fast way to identify differences between two files no matter how long they are. This could save you a lot of time and effort. 

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

It is a good idea to save your work that way if you make a mistake you don't have to spend time trying to figure out where the error is located, you can just go back to a working previous version.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

I think there are more pros than cons, because a machine can't use logic to create a commit. Its better to judge the changes we have done to our code/program in order to create a commit.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Because when you are coding you probably have different files involved in the program so it's a good idea to save a commit for each file that you've changed, but in google Docs you generally only work/edit one file at a time so there is no need to save multiple files in one commit.

How can you use the commands git log and git diff to view the history of files?

git log shows you all the commits created and git diff lets you differentiate between commits to look at specific changes

How might using version control make you more confident to make changes that could break something?

It gives you the opportunity of pinpoint any bugs or errors that might have been introduced into the code and this makes it easier to solve them.